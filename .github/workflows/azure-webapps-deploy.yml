name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: toeic-practice
  RESOURCE_GROUP: toeic-app

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package -DskipTests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO }}/backend:${{ github.sha }}
            ghcr.io/${{ env.REPO }}/backend:latest
          file: ./Dockerfile
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: replace image version in compose
        shell: pwsh
        run: |
          $composePath = "./docker-compose.yml"
          ((Get-Content -path $composePath -Raw) -replace 'latest','${{ github.sha }}') | Set-Content -Path $composePath
          Get-Content -path $composePath -Raw
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config container set --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --multicontainer-config-type compose --multicontainer-config-file ./docker-compose.yml